# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '3.1'
volumes:
  ca.example.com:
  orderer.example.com:
  peer0.org1.example.com:
  couchdb0:


networks:
  micon1:
    driver: overlay

services:

  ca.example.com:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.example.com
      #- FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/4aade42e8498e67f2c7629dd46fed42badbca67763610cb3088db79785884a7e_sk
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=micon1
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/4aade42e8498e67f2c7629dd46fed42badbca67763610cb3088db79785884a7e_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1
    networks:
      - micon1

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050 #added
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=micon1
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
    - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
    #- orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - micon1

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:$IMAGE_TAG
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=micon1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - micon1


  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    # extends:
    #   file: peer-base.yaml
    #   service: peer-base
    links: #added
      - orderer.example.com
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB #
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984 #
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME= #
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD= #
      - CORE_PEER_ADDRESSAUTODETECT=true #
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock #
      - CORE_LOGGING_LEVEL=DEBUG #
      - CORE_PEER_NETWORKID=peer0.org1.example.com #
      - CORE_NEXT=true #
      - CORE_PEER_ENDORSER_ENABLED=true #
      - CORE_PEER_PROFILE_ENABLED=true #
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer.example.com:7050 #
      - CORE_PEER_GOSSIP_IGNORESECURITY=true #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=micon1 #network
      - CORE_PEER_TLS_ENABLED=false #
      - CORE_PEER_GOSSIP_USELEADERELECTION=false #
      - CORE_PEER_GOSSIP_ORGLEADER=true #

    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.org1.example.com:/var/hyperledger/production
    ports:
      - 8051:7051
      - 8053:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      - micon1

  
